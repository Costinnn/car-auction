datasource db {
  url      = env("DATABASE_URL")
  provider = "mongodb"
}

generator client {
  provider = "prisma-client-js"
}

// authentication
model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// own models
model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String    @unique
  image          String?
  email          String    @unique
  emailVerified  DateTime?
  hashedPassword String
  createdAt      DateTime  @default(now())
  accounts       Account[]
  sessions       Session[]

  bids     Bid[]
  carPosts Carpost[]
}

model Carpost {
  id                  String   @id @default(auto()) @map("_id") @db.ObjectId
  name                String
  phone               String
  images              String[]
  title               String
  brand               String
  model               String
  vin                 String
  year                String
  mileage             String
  transmission        String
  gears               String
  drivetrain          String
  engineCapacity      String
  engineCylinders     String
  engineConfiguration String
  category            String
  eColor              String
  iColor              String
  location            String
  description         String
  modifications       String[]
  flaws               String[]

  buyNow     Int?  @default(0)
  minimumBid Int?  @default(0)
  currentBid Bid?  @relation("currentBid")
  bids       Bid[] @relation("bids")
  views      Int?  @default(0)

  sellerId String @db.ObjectId
  seller   User   @relation(fields: [sellerId], references: [id])

  expiresAt DateTime
  createdAt DateTime @default(now())
}

model Bid {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  bidValue  Int
  createdAt DateTime @default(now())

  bidderId String @db.ObjectId
  bidder   User   @relation(fields: [bidderId], references: [id])

  carPostId String  @db.ObjectId
  carPost   Carpost @relation("bids", fields: [carPostId], references: [id])

  currentCarPostId String  @unique @db.ObjectId
  currentBid       Carpost @relation("currentBid", fields: [currentCarPostId], references: [id])
}
